apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile files('libs/commons-io-2.4.jar')
    //    compile 'com.facebook.stetho:stetho:1.1.1'
    //    compile project(":appcan-android:engine-crosswalk")
    //    compile 'com.facebook.stetho:stetho-okhttp:1.1.1'
    //    compile project(":engine-webview");
    compile files('libs/xwalk_core_library_java.jar')
}

android {
    compileSdkVersion 22
    buildToolsVersion "23.0.0"
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
    }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    lintOptions {
        abortOnError false
        warningsAsErrors false
        disable 'InvalidPackage'
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".debug"
        }
    }
}

task clearJar(type: Delete) {
    delete 'libs/AppCanEngine.jar'
}

task makeJar(type:Jar) {
    //指定生成的jar名
    baseName 'AppCanEngine'
    //从哪里打包class文件
    from('build/intermediates/classes/debug/')
    //打包到jar后的目录结构
    into('')
    //去掉不需要打包的目录和文件
    exclude('test/', 'BuildConfig.class', 'R.class')
    //去掉R$开头的文件
    exclude{ it.name.startsWith('R$');}
}

makeJar.dependsOn(clearJar, build)